pipeline {
    agent any
    environment {
        SONAR_TOKEN = credentials('sonarqube') // Fetch the SonarQube token from Jenkins credentials
    }
    
    stages {
        
        stage('Clonage du dépôt') {
            steps {
                echo 'Téléchargement...'
                git branch: 'ahmed', url: 'https://github.com/Reformed2D/Reformed2D_Devops.git', credentialsId: 'github-pat'
            }
        }
        stage('Test Maven') {
            steps {
                sh 'mvn -version'
            }
        }
        stage('Test Git') {
            steps {
                sh 'git --version'
            }
        }
        stage('Maven Clean and Compile') {
            steps {
                // Clean and compile the project to ensure .class files are available
                sh 'mvn clean package -DskipTests'
            }
        }
        stage('MVN SONARQUBE') {
            steps {
                withSonarQubeEnv(installationName: 'SonarQube') {
                    // Run the SonarQube analysis and provide the compiled classes directory
                    sh """
                       mvn sonar:sonar \
                         -Dsonar.login=${SONAR_TOKEN} \
                         -Dsonar.java.binaries=target/classes
                    """
                }
            }
        }
        stage('Déploiement vers Nexus') {
    steps {
        withCredentials([usernamePassword(credentialsId: 'nexus-credentials', usernameVariable: 'MAVEN_USERNAME', passwordVariable: 'MAVEN_PASSWORD')]) {
            sh '''
                echo "Deploying to Nexus..."
                mvn deploy -X -Dmaven.test.skip=true -s /usr/share/maven/conf/settings.xml
            '''
        }
    }
}
    }
    post {
        success {
            script {
                // Capture the changed files between the last commit and the current commit
                def changes = sh(script: "git diff --name-only HEAD~1 HEAD", returnStdout: true).trim()
                
                emailext (
                    subject: "✅ Job build réussi '${env.JOB_NAME} [#${env.BUILD_NUMBER}]'",
                    body: """
                        <html>
                            <body>
                                <h2 style="color: green;">✅ SUCCÈS : Job '${env.JOB_NAME} [#${env.BUILD_NUMBER}]'</h2>
                                <p>Le job s'est terminé avec succès.</p>
                                <h3>Détails :</h3>
                                <ul>
                                    <li><strong>Numéro de build :</strong> ${env.BUILD_NUMBER}</li>
                                    <li><strong>Nom du job :</strong> ${env.JOB_NAME}</li>
                                    <li><strong>Fichiers modifiés :</strong><pre>${changes}</pre></li>
                                </ul>
                            </body>
                        </html>
                    """,
                    mimeType: 'text/html',
                    to: "ahmed.bdllh2000@gmail.com"
                )
            }
        }
        failure {
            script {
                def changes = sh(script: "git diff --name-only HEAD~1 HEAD", returnStdout: true).trim()
                
                emailext (
                    subject: "❌ Échec de la construction du job '${env.JOB_NAME} [#${env.BUILD_NUMBER}]'",
                    body: """
                        <html>
                            <body>
                                <h2 style="color: red;">❌ ÉCHEC : Job '${env.JOB_NAME} [#${env.BUILD_NUMBER}]'</h2>
                                <p>Le job a échoué.</p>
                                <h3>Détails :</h3>
                                <ul>
                                    <li><strong>Nom du job :</strong> ${env.JOB_NAME}</li>
                                    <li><strong>Numéro de build :</strong> ${env.BUILD_NUMBER}</li>
                                    <li><strong>Fichiers modifiés :</strong><pre>${changes}</pre></li>
                                </ul>
                            </body>
                        </html>
                    """,
                    mimeType: 'text/html',
                    to: "ahmed.bdllh2000@gmail.com"
                )
            }
        }
    }
}

